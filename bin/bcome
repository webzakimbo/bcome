#!/usr/bin/env ruby

require 'bcome'

def clean_up
  kill_trailing_forked_loading_bars
  close_connections
end

def close_connections
  ::Bcome::Bootup.instance.close_ssh_connections
  ::Bcome::Ssh::TunnelKeeper.instance.close_tunnels
end  

def kill_trailing_forked_loading_bars
  ::Bcome::LoadingBar::PidBucket.instance.kill_all
end

def pack_metadata?
  ARGV[0] == "pack_metadata"
end

def unpack_metadata?
  ARGV[0] == "unpack_metadata"
end

trap("INT") {
  clean_up
  exit
}

begin
  spawn_into_console = true
  arguments = ARGV - [ARGV[0]]

  if pack_metadata? 
    ::Bcome::Encryptor.instance.pack
    exit
  elsif unpack_metadata?
    ::Bcome::Encryptor.instance.unpack
    exit
  end

  ::Bcome::Bootup.set_and_do({ breadcrumbs: ARGV[0], arguments: arguments }, spawn_into_console)
  clean_up
rescue ::Bcome::Exception::Base
  clean_up
  puts 'bcome terminated unexpectedly'.warning
end
